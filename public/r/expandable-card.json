{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "expandable-card",
  "type": "registry:ui",
  "dependencies": [
    "clsx tailwind-merge motion"
  ],
  "files": [
    {
      "path": "registry/new-york-v4/ui/expandable-card.tsx",
      "content": "\"use client\"\n\nimport * as React from \"react\"\nimport { AnimatePresence, motion } from \"motion/react\"\n\nimport { cn } from \"@/lib/utils\"\n\ninterface ExpandableCardProps {\n  title: string\n  src: string\n  description: string\n  children?: React.ReactNode\n  className?: string\n  classNameExpanded?: string\n  [key: string]: any\n}\n\nexport function ExpandableCard({\n  title,\n  src,\n  description,\n  children,\n  className,\n  classNameExpanded,\n  ...props\n}: ExpandableCardProps) {\n  const [active, setActive] = React.useState(false)\n  const cardRef = React.useRef<HTMLDivElement>(null)\n  const id = React.useId()\n\n  React.useEffect(() => {\n    const onKeyDown = (event: KeyboardEvent) => {\n      if (event.key === \"Escape\") {\n        setActive(false)\n      }\n    }\n\n    const handleClickOutside = (event: MouseEvent | TouchEvent) => {\n      if (cardRef.current && !cardRef.current.contains(event.target as Node)) {\n        setActive(false)\n      }\n    }\n\n    window.addEventListener(\"keydown\", onKeyDown)\n    document.addEventListener(\"mousedown\", handleClickOutside)\n    document.addEventListener(\"touchstart\", handleClickOutside)\n\n    return () => {\n      window.removeEventListener(\"keydown\", onKeyDown)\n      document.removeEventListener(\"mousedown\", handleClickOutside)\n      document.removeEventListener(\"touchstart\", handleClickOutside)\n    }\n  }, [])\n\n  return (\n    <>\n      <AnimatePresence>\n        {active && (\n          <motion.div\n            initial={{ opacity: 0 }}\n            animate={{ opacity: 1 }}\n            exit={{ opacity: 0 }}\n            className=\"fixed inset-0 z-10 h-full w-full bg-white/50 backdrop-blur-md dark:bg-black/50\"\n          />\n        )}\n      </AnimatePresence>\n      <AnimatePresence>\n        {active && (\n          <div\n            className={cn(\n              \"fixed inset-0 z-[100] grid place-items-center before:pointer-events-none sm:mt-16\"\n            )}\n          >\n            <motion.div\n              layoutId={`card-${title}-${id}`}\n              ref={cardRef}\n              className={cn(\n                \"relative flex h-full w-full max-w-[850px] flex-col overflow-auto bg-zinc-50 shadow-sm [-ms-overflow-style:none] [-webkit-overflow-scrolling:touch] [scrollbar-width:none] sm:rounded-t-3xl dark:bg-zinc-950 dark:shadow-none\",\n                classNameExpanded\n              )}\n              {...props}\n            >\n              <motion.div layoutId={`image-${title}-${id}`}>\n                <div className=\"relative before:absolute before:inset-x-0 before:bottom-[-1px] before:z-50 before:h-[70px] before:bg-gradient-to-t before:from-zinc-50 dark:before:from-zinc-950\">\n                  <img\n                    src={src}\n                    alt={title}\n                    className=\"h-80 w-full object-cover object-center\"\n                  />\n                </div>\n              </motion.div>\n              <div className=\"relative h-full before:fixed before:inset-x-0 before:bottom-0 before:z-50 before:h-[70px] before:bg-gradient-to-t before:from-zinc-50 dark:before:from-zinc-950\">\n                <div className=\"flex h-auto items-start justify-between p-8\">\n                  <div>\n                    <motion.p\n                      layoutId={`description-${description}-${id}`}\n                      className=\"text-lg text-zinc-500 dark:text-zinc-400\"\n                    >\n                      {description}\n                    </motion.p>\n                    <motion.h3\n                      layoutId={`title-${title}-${id}`}\n                      className=\"mt-0.5 text-4xl font-semibold text-black sm:text-4xl dark:text-white\"\n                    >\n                      {title}\n                    </motion.h3>\n                  </div>\n                  <motion.button\n                    aria-label=\"Close card\"\n                    layoutId={`button-${title}-${id}`}\n                    className=\"flex h-10 w-10 shrink-0 items-center justify-center rounded-full border border-gray-200/90 bg-zinc-50 text-neutral-700 transition-colors duration-300 hover:border-gray-300/90 hover:bg-neutral-50 hover:text-black focus:outline-none dark:border-zinc-900 dark:bg-zinc-950 dark:text-white/70 dark:hover:border-zinc-800 dark:hover:bg-neutral-950 dark:hover:text-white\"\n                    onClick={() => setActive(false)}\n                  >\n                    <motion.div\n                      animate={{ rotate: active ? 45 : 0 }}\n                      transition={{ duration: 0.4 }}\n                    >\n                      <svg\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        width=\"20\"\n                        height=\"20\"\n                        viewBox=\"0 0 24 24\"\n                        fill=\"none\"\n                        stroke=\"currentColor\"\n                        strokeWidth=\"2\"\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                      >\n                        <path d=\"M5 12h14\" />\n                        <path d=\"M12 5v14\" />\n                      </svg>\n                    </motion.div>\n                  </motion.button>\n                </div>\n                <div className=\"relative px-6 sm:px-8\">\n                  <motion.div\n                    layout\n                    initial={{ opacity: 0 }}\n                    animate={{ opacity: 1 }}\n                    exit={{ opacity: 0 }}\n                    className=\"flex flex-col items-start gap-4 overflow-auto pb-10 text-base text-zinc-500 dark:text-zinc-400\"\n                  >\n                    {children}\n                  </motion.div>\n                </div>\n              </div>\n            </motion.div>\n          </div>\n        )}\n      </AnimatePresence>\n\n      <motion.div\n        role=\"dialog\"\n        aria-labelledby={`card-title-${id}`}\n        aria-modal=\"true\"\n        layoutId={`card-${title}-${id}`}\n        onClick={() => setActive(true)}\n        className={cn(\n          \"flex cursor-pointer flex-col items-center justify-between rounded-2xl border border-gray-200/70 bg-zinc-50 p-3 shadow-sm dark:border-zinc-900 dark:bg-zinc-950 dark:shadow-none\",\n          className\n        )}\n      >\n        <div className=\"flex flex-col gap-4\">\n          <motion.div layoutId={`image-${title}-${id}`}>\n            <img\n              src={src}\n              alt={title}\n              className=\"h-56 w-64 rounded-lg object-cover object-center\"\n            />\n          </motion.div>\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex flex-col\">\n              <motion.p\n                layoutId={`description-${description}-${id}`}\n                className=\"text-sm font-medium text-zinc-500 md:text-left dark:text-zinc-400\"\n              >\n                {description}\n              </motion.p>\n              <motion.h3\n                layoutId={`title-${title}-${id}`}\n                className=\"font-semibold text-black md:text-left dark:text-white\"\n              >\n                {title}\n              </motion.h3>\n            </div>\n            <motion.button\n              aria-label=\"Open card\"\n              layoutId={`button-${title}-${id}`}\n              className={cn(\n                \"flex h-8 w-8 shrink-0 items-center justify-center rounded-full border border-gray-200/90 bg-zinc-50 text-neutral-700 transition-colors duration-300 hover:border-gray-300/90 hover:bg-neutral-50 hover:text-black focus:outline-none dark:border-zinc-900 dark:bg-zinc-950 dark:text-white/70 dark:hover:border-zinc-800 dark:hover:bg-neutral-950 dark:hover:text-white\",\n                className\n              )}\n            >\n              <motion.div\n                animate={{ rotate: active ? 45 : 0 }}\n                transition={{ duration: 0.4 }}\n              >\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  width=\"16\"\n                  height=\"16\"\n                  viewBox=\"0 0 24 24\"\n                  fill=\"none\"\n                  stroke=\"currentColor\"\n                  strokeWidth=\"2\"\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                >\n                  <path d=\"M5 12h14\" />\n                  <path d=\"M12 5v14\" />\n                </svg>\n              </motion.div>\n            </motion.button>\n          </div>\n        </div>\n      </motion.div>\n    </>\n  )\n}\n",
      "type": "registry:ui"
    }
  ]
}