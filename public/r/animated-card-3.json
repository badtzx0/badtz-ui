{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "animated-card-3",
  "type": "registry:ui",
  "dependencies": [
    "clsx tailwind-merge"
  ],
  "files": [
    {
      "path": "registry/new-york-v4/ui/animated-card.tsx",
      "content": "import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\ninterface CardProps extends React.HTMLAttributes<HTMLDivElement> {}\n\nexport function AnimatedCard({ className, ...props }: CardProps) {\n  return (\n    <div\n      role=\"region\"\n      aria-labelledby=\"card-title\"\n      aria-describedby=\"card-description\"\n      className={cn(\n        \"group/animated-card relative w-[356px] overflow-hidden rounded-xl border border-zinc-200 bg-white shadow-sm dark:border-zinc-900 dark:bg-black\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport function CardBody({ className, ...props }: CardProps) {\n  return (\n    <div\n      role=\"group\"\n      className={cn(\n        \"flex flex-col space-y-1.5 border-t border-zinc-200 p-4 dark:border-zinc-900\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\ninterface CardTitleProps extends React.HTMLAttributes<HTMLHeadingElement> {}\n\nexport function CardTitle({ className, ...props }: CardTitleProps) {\n  return (\n    <h3\n      className={cn(\n        \"text-lg leading-none font-semibold tracking-tight text-black dark:text-white\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\ninterface CardDescriptionProps\n  extends React.HTMLAttributes<HTMLParagraphElement> {}\n\nexport function CardDescription({ className, ...props }: CardDescriptionProps) {\n  return (\n    <p\n      className={cn(\n        \"text-sm text-neutral-500 dark:text-neutral-400\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport function CardVisual({ className, ...props }: CardProps) {\n  return (\n    <div\n      className={cn(\"h-[180px] w-[356px] overflow-hidden\", className)}\n      {...props}\n    />\n  )\n}\n",
      "type": "registry:ui"
    },
    {
      "path": "registry/new-york-v4/ui/visual-3.tsx",
      "content": "\"use client\"\n\nimport * as React from \"react\"\nimport { useState } from \"react\"\n\ninterface Visual3Props {\n  mainColor?: string\n  secondaryColor?: string\n  gridColor?: string\n}\n\nexport function Visual3({\n  mainColor = \"#8b5cf6\",\n  secondaryColor = \"#fbbf24\",\n  gridColor = \"#80808015\",\n}: Visual3Props) {\n  const [hovered, setHovered] = useState(false)\n\n  return (\n    <>\n      <div\n        className=\"absolute inset-0 z-20\"\n        onMouseEnter={() => setHovered(true)}\n        onMouseLeave={() => setHovered(false)}\n        style={\n          {\n            \"--color\": mainColor,\n            \"--secondary-color\": secondaryColor,\n          } as React.CSSProperties\n        }\n      />\n\n      <div className=\"relative h-[180px] w-[356px] overflow-hidden rounded-t-lg\">\n        <Layer4\n          color={mainColor}\n          secondaryColor={secondaryColor}\n          hovered={hovered}\n        />\n        <Layer3 color={mainColor} />\n        <Layer2 color={mainColor} />\n        <Layer1 color={mainColor} secondaryColor={secondaryColor} />\n        <EllipseGradient color={mainColor} />\n        <GridLayer color={gridColor} />\n      </div>\n    </>\n  )\n}\n\ninterface LayerProps {\n  color: string\n  secondaryColor?: string\n  hovered?: boolean\n}\n\nconst GridLayer: React.FC<{ color: string }> = ({ color }) => {\n  return (\n    <div\n      style={{ \"--grid-color\": color } as React.CSSProperties}\n      className=\"pointer-events-none absolute inset-0 z-[4] h-full w-full bg-transparent bg-[linear-gradient(to_right,var(--grid-color)_1px,transparent_1px),linear-gradient(to_bottom,var(--grid-color)_1px,transparent_1px)] [mask-image:radial-gradient(ellipse_50%_50%_at_50%_50%,#000_60%,transparent_100%)] bg-[size:20px_20px] bg-center opacity-70\"\n    />\n  )\n}\n\nconst EllipseGradient: React.FC<{ color: string }> = ({ color }) => {\n  return (\n    <div className=\"absolute inset-0 z-[5] flex h-full w-full items-center justify-center\">\n      <svg\n        width=\"356\"\n        height=\"196\"\n        viewBox=\"0 0 356 180\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n      >\n        <rect width=\"356\" height=\"180\" fill=\"url(#paint0_radial_12_207)\" />\n        <defs>\n          <radialGradient\n            id=\"paint0_radial_12_207\"\n            cx=\"0\"\n            cy=\"0\"\n            r=\"1\"\n            gradientUnits=\"userSpaceOnUse\"\n            gradientTransform=\"translate(178 98) rotate(90) scale(98 178)\"\n          >\n            <stop stopColor={color} stopOpacity=\"0.25\" />\n            <stop offset=\"0.34\" stopColor={color} stopOpacity=\"0.15\" />\n            <stop offset=\"1\" stopOpacity=\"0\" />\n          </radialGradient>\n        </defs>\n      </svg>\n    </div>\n  )\n}\n\nconst Layer3: React.FC<{ color: string }> = ({ color }) => {\n  return (\n    <div className=\"ease-[cubic-bezier(0.6, 0.6, 0, 1)] absolute inset-0 z-[6] flex translate-y-full items-center justify-center opacity-0 transition-all duration-500 group-hover/animated-card:translate-y-0 group-hover/animated-card:opacity-100\">\n      <svg\n        width=\"356\"\n        height=\"180\"\n        viewBox=\"0 0 356 180\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n      >\n        <rect width=\"356\" height=\"180\" fill=\"url(#paint0_linear_29_3)\" />\n        <defs>\n          <linearGradient\n            id=\"paint0_linear_29_3\"\n            x1=\"178\"\n            y1=\"0\"\n            x2=\"178\"\n            y2=\"180\"\n            gradientUnits=\"userSpaceOnUse\"\n          >\n            <stop offset=\"0.35\" stopColor={color} stopOpacity=\"0\" />\n            <stop offset=\"1\" stopColor={color} stopOpacity=\"0.3\" />\n          </linearGradient>\n        </defs>\n      </svg>\n    </div>\n  )\n}\n\nconst Layer1: React.FC<LayerProps> = ({ color, secondaryColor }) => {\n  return (\n    <div\n      className=\"absolute top-4 left-4 z-[8] flex items-center gap-1\"\n      style={\n        {\n          \"--color\": color,\n          \"--secondary-color\": secondaryColor,\n        } as React.CSSProperties\n      }\n    >\n      <div className=\"flex shrink-0 items-center rounded-full border border-zinc-200 bg-white/25 px-1.5 py-0.5 backdrop-blur-sm transition-opacity duration-300 ease-in-out group-hover/animated-card:opacity-0 dark:border-zinc-800 dark:bg-black/25\">\n        <div className=\"h-1.5 w-1.5 rounded-full bg-[var(--color)]\" />\n        <span className=\"ml-1 text-[10px] text-black dark:text-white\">\n          +15,2%\n        </span>\n      </div>\n      <div className=\"flex shrink-0 items-center rounded-full border border-zinc-200 bg-white/25 px-1.5 py-0.5 backdrop-blur-sm transition-opacity duration-300 ease-in-out group-hover/animated-card:opacity-0 dark:border-zinc-800 dark:bg-black/25\">\n        <div className=\"h-1.5 w-1.5 rounded-full bg-[var(--secondary-color)]\" />\n        <span className=\"ml-1 text-[10px] text-black dark:text-white\">\n          +18,7%\n        </span>\n      </div>\n    </div>\n  )\n}\n\nconst Layer2: React.FC<{ color: string }> = ({ color }) => {\n  return (\n    <div\n      className=\"group relative h-full w-[356px]\"\n      style={{ \"--color\": color } as React.CSSProperties}\n    >\n      <div className=\"ease-[cubic-bezier(0.6, 0.6, 0, 1)] absolute inset-0 z-[7] flex w-[356px] translate-y-full items-start justify-center bg-transparent p-4 transition-transform duration-500 group-hover/animated-card:translate-y-0\">\n        <div className=\"ease-[cubic-bezier(0.6, 0, 1)] rounded-md border border-zinc-200 bg-white/25 p-1.5 opacity-0 backdrop-blur-sm transition-opacity duration-500 group-hover/animated-card:opacity-100 dark:border-zinc-800 dark:bg-black/25\">\n          <div className=\"flex items-center gap-2\">\n            <div className=\"h-2 w-2 shrink-0 rounded-full bg-[var(--color)]\" />\n            <p className=\"text-xs text-black dark:text-white\">\n              Random Data Visualization\n            </p>\n          </div>\n          <p className=\"text-xs text-neutral-500 dark:text-neutral-400\">\n            Displaying some interesting stats.\n          </p>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nconst Layer4: React.FC<LayerProps> = ({ color, secondaryColor, hovered }) => {\n  const rectsData = [\n    {\n      width: 15,\n      height: 20,\n      y: 110,\n      hoverHeight: 20,\n      hoverY: 130,\n      x: 40,\n      fill: \"currentColor\",\n      hoverFill: secondaryColor,\n    },\n    {\n      width: 15,\n      height: 20,\n      y: 90,\n      hoverHeight: 20,\n      hoverY: 130,\n      x: 60,\n      fill: color,\n      hoverFill: color,\n    },\n    {\n      width: 15,\n      height: 40,\n      y: 70,\n      hoverHeight: 30,\n      hoverY: 120,\n      x: 80,\n      fill: color,\n      hoverFill: color,\n    },\n    {\n      width: 15,\n      height: 30,\n      y: 80,\n      hoverHeight: 50,\n      hoverY: 100,\n      x: 100,\n      fill: color,\n      hoverFill: color,\n    },\n    {\n      width: 15,\n      height: 30,\n      y: 110,\n      hoverHeight: 40,\n      hoverY: 110,\n      x: 120,\n      fill: \"currentColor\",\n      hoverFill: secondaryColor,\n    },\n    {\n      width: 15,\n      height: 50,\n      y: 110,\n      hoverHeight: 20,\n      hoverY: 130,\n      x: 140,\n      fill: \"currentColor\",\n      hoverFill: secondaryColor,\n    },\n    {\n      width: 15,\n      height: 50,\n      y: 60,\n      hoverHeight: 30,\n      hoverY: 120,\n      x: 160,\n      fill: color,\n      hoverFill: color,\n    },\n    {\n      width: 15,\n      height: 30,\n      y: 80,\n      hoverHeight: 20,\n      hoverY: 130,\n      x: 180,\n      fill: color,\n      hoverFill: color,\n    },\n    {\n      width: 15,\n      height: 20,\n      y: 110,\n      hoverHeight: 40,\n      hoverY: 110,\n      x: 200,\n      fill: \"currentColor\",\n      hoverFill: secondaryColor,\n    },\n    {\n      width: 15,\n      height: 40,\n      y: 70,\n      hoverHeight: 60,\n      hoverY: 90,\n      x: 220,\n      fill: color,\n      hoverFill: color,\n    },\n    {\n      width: 15,\n      height: 30,\n      y: 110,\n      hoverHeight: 70,\n      hoverY: 80,\n      x: 240,\n      fill: \"currentColor\",\n      hoverFill: secondaryColor,\n    },\n    {\n      width: 15,\n      height: 50,\n      y: 110,\n      hoverHeight: 50,\n      hoverY: 100,\n      x: 260,\n      fill: \"currentColor\",\n      hoverFill: secondaryColor,\n    },\n    {\n      width: 15,\n      height: 20,\n      y: 110,\n      hoverHeight: 80,\n      hoverY: 70,\n      x: 280,\n      fill: \"currentColor\",\n      hoverFill: secondaryColor,\n    },\n    {\n      width: 15,\n      height: 30,\n      y: 80,\n      hoverHeight: 90,\n      hoverY: 60,\n      x: 300,\n      fill: color,\n      hoverFill: color,\n    },\n  ]\n\n  return (\n    <div className=\"ease-[cubic-bezier(0.6, 0.6, 0, 1)] absolute inset-0 z-[8] flex h-[180px] w-[356px] items-center justify-center text-neutral-800/10 transition-transform duration-500 group-hover/animated-card:scale-150 dark:text-white/15\">\n      <svg width=\"356\" height=\"180\" xmlns=\"http://www.w3.org/2000/svg\">\n        {rectsData.map((rect, index) => (\n          <rect\n            key={index}\n            width={rect.width}\n            height={hovered ? rect.hoverHeight : rect.height}\n            x={rect.x}\n            y={hovered ? rect.hoverY : rect.y}\n            fill={hovered ? rect.hoverFill : rect.fill}\n            rx=\"2\"\n            ry=\"2\"\n            className=\"ease-[cubic-bezier(0.6, 0.6, 0, 1)] transition-all duration-500\"\n          />\n        ))}\n      </svg>\n    </div>\n  )\n}\n",
      "type": "registry:ui"
    }
  ]
}